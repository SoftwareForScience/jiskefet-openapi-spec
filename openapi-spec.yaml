swagger: '2.0'
info:
  description: Running with /api base path
  version: 0.1.0
  title: Jiskefet
basePath: /api
tags:
  - name: logs
    description: ''
  - name: runs
    description: ''
schemes:
  - http
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /runs:
    post:
      summary: Creates a Run.
      parameters:
        - name: CreateRunDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateRunDto'
      responses:
        '201':
          description: Succesfully created a Run.
          schema:
            $ref: '#/definitions/Run'
        '409':
          description: A Run already exists with given Run number.
      tags:
        - runs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    get:
      summary: Returns all Runs.
      parameters:
        - type: string
          name: orderBy
          required: false
          in: query
          description: On which field to order on.
        - type: string
          name: orderDirection
          required: false
          in: query
          description: 'The order direction, either ascending or descending.'
          enum:
            - ASC
            - DESC
        - type: integer
          name: pageSize
          required: false
          in: query
          description: The maximum amount of logs in each result.
          default: 25
          format: int64
        - type: integer
          name: pageNumber
          required: false
          in: query
          description: 'The current page, i.e. the offset in the result set based on pageSize.'
          default: 1
          format: int64
        - type: integer
          name: runNumber
          required: false
          in: query
          description: The id of the log.
          format: int64
        - type: string
          name: startTimeO2Start
          required: false
          in: query
          description: The lower bound of the timeO2Start filter range.
          format: date-time
        - type: string
          name: endTimeO2Start
          required: false
          in: query
          description: The upper bound of the timeO2Start filter range.
          format: date-time
        - type: string
          name: startTimeTrgStart
          required: false
          in: query
          description: The lower bound of the timeTrgStart filter range.
          format: date-time
        - type: string
          name: endTimeTrgStart
          required: false
          in: query
          description: The upper bound of the timeTrgStart filter range.
          format: date-time
        - type: string
          name: startTimeTrgEnd
          required: false
          in: query
          description: The lower bound of the timeTrgEnd filter range.
          format: date-time
        - type: string
          name: endTimeTrgEnd
          required: false
          in: query
          description: The upper bound of the timeTrgEnd filter range.
          format: date-time
        - type: string
          name: startTimeO2End
          required: false
          in: query
          description: The lower bound of the timeO2End filter range.
          format: date-time
        - type: string
          name: endTimeO2End
          required: false
          in: query
          description: The upper bound of the timeO2End filter range.
          format: date-time
        - type: string
          name: activityId
          required: false
          in: query
          description: The id of the activity.
        - type: string
          name: runType
          required: false
          in: query
          description: The type of the run.
          enum:
            - PHYSICS
            - COSMICS
            - TECHNICAL
        - type: string
          name: runQuality
          required: false
          in: query
          description: The quality of the run.
      responses:
        '200':
          description: Succesfully returned Runs.
        '404':
          description: There are no Runs found with given query params.
      tags:
        - runs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/runs/{id}':
    get:
      summary: Returns a specific Run.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned a specific Run.
        '404':
          description: There is no Run with the given Run number.
      tags:
        - runs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    patch:
      summary: Updates certain fields of a Run.
      parameters:
        - name: PatchRunDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/PatchRunDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully updated a Run.
      tags:
        - runs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/runs/{id}/logs':
    patch:
      summary: Links a Log to a specific Run.
      parameters:
        - name: LinkLogToRunDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/LinkLogToRunDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '204':
          description: The Log is successfully linked to the Run.
        '404':
          description: The Log or Run does not exist.
        '409':
          description: The Log is already linked to the Run.
      tags:
        - runs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /logs:
    post:
      summary: Creates a Log.
      parameters:
        - name: CreateLogDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateLogDto'
      responses:
        '201':
          description: Succesfully created a Log
          schema:
            type: object
        '409':
          description: A Log already exists with this ID.
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    get:
      summary: Returns all Logs.
      parameters:
        - type: string
          name: orderBy
          required: false
          in: query
          description: On which field to order on.
        - type: string
          name: orderDirection
          required: false
          in: query
          description: 'The order direction, either ascending or descending.'
          enum:
            - ASC
            - DESC
        - type: integer
          name: pageSize
          required: false
          in: query
          description: The maximum amount of logs in each result.
          default: 25
          format: int64
        - type: integer
          name: pageNumber
          required: false
          in: query
          description: 'The current page, i.e. the offset in the result set based on pageSize.'
          default: 1
          format: int64
        - type: integer
          name: logId
          required: false
          in: query
          description: The id of the log.
          format: int64
        - type: string
          name: searchterm
          required: false
          in: query
          description: Search for a term that exists in the title field of a log.
        - type: string
          name: subtype
          required: false
          in: query
          description: The subtype of the log.
          enum:
            - run
            - subsystem
            - announcement
            - intervention
            - comment
        - type: string
          name: origin
          required: false
          in: query
          description: The origin/creator of the log.
          enum:
            - human
            - process
        - type: string
          name: startCreationTime
          required: false
          in: query
          description: The lower bound of the creation time filter range.
          format: date-time
        - type: string
          name: endCreationTime
          required: false
          in: query
          description: The upper bound of the creation time filter range.
          format: date-time
        - type: integer
          name: user
          required: false
          in: query
          description: The author of the log..
          format: int64
      responses:
        '200':
          description: Succesfully returned Logs.
        '404':
          description: There are no Logs.
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/logs/{id}/attachments':
    post:
      summary: Creates a Attachment for a specific Log.
      parameters:
        - name: CreateAttachmentDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateAttachmentDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '201':
          description: Succesfully created an Attachment.
          schema:
            $ref: '#/definitions/Attachment'
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/logs/{id}':
    get:
      summary: Returns a specific Log.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returns a specific Log.
        '404':
          description: There is no Log with this ID.
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/logs/{id}/runs':
    patch:
      summary: Links a Run to a specific Log.
      parameters:
        - name: LinkRunToLogDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/LinkRunToLogDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '204':
          description: Succesfully linked a Run to a Log.
        '404':
          description: The Run or Log does not exist.
        '409':
          description: The Run is already linked to the Log.
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/logs/{id}/threads':
    get:
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: ''
          schema:
            type: object
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /logs/threads:
    post:
      parameters:
        - name: CreateCommentDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateCommentDto'
      responses:
        '201':
          description: ''
          schema:
            type: object
      tags:
        - logs
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/flp/{name}/runs/{id}':
    get:
      summary: Returns a specific FLP based on RunId.
      parameters:
        - type: string
          name: name
          required: true
          in: path
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned an FLP.
        '404':
          description: There is no FLP for the Run with this run number.
      tags:
        - flp
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    patch:
      summary: Updates an FLP based on a RunId and FLPName.
      parameters:
        - name: PatchFlpDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/PatchFlpDto'
        - type: string
          name: name
          required: true
          in: path
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully updated an FLP.
        '404':
          description: The Run number or/and FLP name does not exist.
      tags:
        - flp
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /flp:
    post:
      summary: Creates an FLP.
      parameters:
        - name: CreateFlpDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateFlpDto'
      responses:
        '201':
          description: Succesfully created an FLP.
        '409':
          description: An FLP already exists with this Name and Hostname.
      tags:
        - flp
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /tags:
    post:
      summary: Creates a Tag
      parameters:
        - name: CreateTagDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateTagDto'
      responses:
        '201':
          description: Succesfully created a Tag
          schema:
            type: object
        '409':
          description: A Log already exists with this ID.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    get:
      summary: Returns all Tags.
      parameters:
        - type: string
          name: tagText
          required: false
          in: query
          description: The text of the tag
      responses:
        '200':
          description: Successfully returned all Tags.
          schema:
            type: object
        '404':
          description: There are no Tags.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/tags/{id}':
    get:
      summary: Returns a specific Tag.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Successfully returned a specific Tag.
        '404':
          description: There is no Tag with this.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    delete:
      summary: Deletes a specific Tag.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '204':
          description: Succesfully deleted a Tag.
        '404':
          description: The Tag with the given ID does not exist.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/tags/{id}/runs':
    get:
      summary: Returns all Runs for a specific Tag.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned Runs.
        '404':
          description: No Runs found for this Tag.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    patch:
      summary: Links a Run to a specific Tag.
      parameters:
        - name: LinkRunToTagDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/LinkRunToTagDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '204':
          description: Succesfully linked a Run to a Tag.
        '404':
          description: The Run or Tag does not exist.
        '409':
          description: The Run is already linked to the Tag.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/tags/{id}/logs':
    get:
      summary: Returns all Logs for a specific Tag.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned Logs.
        '404':
          description: No Logs found for this Tag.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    patch:
      summary: Links a Run to a specific Tag.
      parameters:
        - name: LinkLogToTagDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/LinkLogToTagDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '204':
          description: Succesfully linked a Run to a Tag.
        '404':
          description: The Run or Tag does not exist.
        '409':
          description: The Run is already linked to the Tag.
      tags:
        - tags
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/attachments/{id}/logs':
    get:
      summary: Returns Attachments that belong to a specific Log.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned the Attachments.
        '404':
          description: No Attachments found for this Log.
      tags:
        - attachments
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /subsystems:
    get:
      summary: Returns all Subsystems.
      responses:
        '200':
          description: Succesfully returned Subsystems.
        '404':
          description: No Subsystems found.
      tags:
        - subsystems
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/subsystems/{id}':
    get:
      summary: Returns a specific Subsystem.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned a Subsystem with given ID.
        '404':
          description: There is no Subsystem with the given ID.
      tags:
        - subsystems
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/users/{id}':
    get:
      summary: Retrieves a specific user.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Successfully retrieved the user with the given ID.
        '404':
          description: Unable to find the User with the given ID
      tags:
        - users
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/users/{id}/tokens':
    get:
      summary: Returns all generated Tokens from a specific User.
      parameters:
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned all Tokens.
        '404':
          description: Unable to find Tokens with given User ID
      tags:
        - users
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
    post:
      summary: Creates a Token and links it to a Subsytem.
      parameters:
        - name: CreateSubSystemPermissionDto
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateSubSystemPermissionDto'
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully created a Token.
      tags:
        - users
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  '/users/{id}/logs':
    get:
      summary: Returns all Logs for a specific User.
      parameters:
        - type: string
          name: orderBy
          required: false
          in: query
          description: On which field to order on.
        - type: string
          name: orderDirection
          required: false
          in: query
          description: 'The order direction, either ascending or descending.'
          enum:
            - ASC
            - DESC
        - type: integer
          name: pageSize
          required: false
          in: query
          description: The maximum amount of logs in each result.
          default: 25
          format: int64
        - type: integer
          name: pageNumber
          required: false
          in: query
          description: 'The current page, i.e. the offset in the result set based on pageSize.'
          default: 1
          format: int64
        - type: integer
          name: logId
          required: false
          in: query
          description: The id of the log.
          format: int64
        - type: string
          name: searchterm
          required: false
          in: query
          description: Search for a term that exists in the title field of a log.
        - type: string
          name: subtype
          required: false
          in: query
          description: The subtype of the log.
          enum:
            - run
            - subsystem
            - announcement
            - intervention
            - comment
        - type: string
          name: origin
          required: false
          in: query
          description: The origin/creator of the log.
          enum:
            - human
            - process
        - type: string
          name: startCreationTime
          required: false
          in: query
          description: The lower bound of the creation time filter range.
          format: date-time
        - type: string
          name: endCreationTime
          required: false
          in: query
          description: The upper bound of the creation time filter range.
          format: date-time
        - type: integer
          name: user
          required: false
          in: query
          description: The author of the log..
          format: int64
        - type: integer
          format: int64
          name: id
          required: true
          in: path
      responses:
        '200':
          description: Succesfully returned Logs.
        '404':
          description: No Logs found for this User.
      tags:
        - users
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /auth:
    get:
      summary: Authenticate a user by giving an Authorization Grant.
      parameters:
        - name: grant
          required: true
          in: query
          type: string
      responses:
        '200':
          description: User has successfully authenticated and a JWT has been given as a response.
        '401':
          description: User is unauthorized due to an invalid Authorization Grant.
        '422':
          description: User has not provided an Authorization Grant as a query parameter.
      tags:
        - authentication
      produces:
        - application/json
      consumes:
        - application/json
  /user/profile:
    get:
      summary: Returns the user's profile
      parameters: []
      responses:
        '200':
          description: User successfully received profile information.
        '400':
          description: No JWT could be found in headers.
        '401':
          description: User is unauthorized
      tags:
        - authentication
      produces:
        - application/json
      consumes:
        - application/json
  /test-token:
    get:
      summary: Returns a JWT for authorization when running end-to-end tests.
      parameters:
        - name: hashedSecret
          required: false
          in: query
          type: string
      responses:
        '200':
          description: The hashed secret given matches the secret in the environment and a JWT is returned.
        '400':
          description: The required query parameter 'hashedSecret' is missing.
        '401':
          description: Hashed secret was not accepted
      tags:
        - authentication
      produces:
        - application/json
      consumes:
        - application/json
  /overview:
    get:
      summary: Returns all Overviews that belong to a specific Log.
      parameters:
        - type: integer
          name: timeRange
          required: false
          in: query
          description: In which time range the logs of eachsubsystem should be posted
          format: int64
      responses:
        '200':
          description: Succesfully returned the overview.
        '404':
          description: Unable to find an overview with given input
      tags:
        - overview
      security:
        - bearer: []
      produces:
        - application/json
      consumes:
        - application/json
  /setting:
    get:
      summary: Returns Settings for Jiskefet-UI.
      responses:
        '200':
          description: Succesfully returned the Settings.
        '404':
          description: No Settings were found.
      tags:
        - setting
      produces:
        - application/json
      consumes:
        - application/json
definitions:
  CreateRunDto:
    type: object
    properties:
      runNumber:
        type: integer
        example: 1
        description: The id of the run
        format: int64
      O2StartTime:
        type: string
        example: '2019-05-07T20:35:24.017Z'
        description: Current Date
        format: date-time
      TrgStartTime:
        type: string
        example: '2019-05-07T20:35:24.017Z'
        description: Current Date
        format: date-time
      runType:
        type: string
        example: COSMICS
        description: What kind of run.
        enum:
          - PHYSICS
          - COSMICS
          - TECHNICAL
      activityId:
        type: string
        example: Sl4e12ofb83no92ns
        description: The id of the activity.
      nDetectors:
        type: integer
        example: 16
        description: Number of detectors during run.
        format: int64
      nFlps:
        type: integer
        example: 7
        description: Number of FLPs that computed data
        format: int64
      nEpns:
        type: integer
        example: 8
        description: Number of EPNs that stored data
        format: int64
    required:
      - runNumber
      - O2StartTime
      - TrgStartTime
      - runType
      - activityId
      - nDetectors
      - nFlps
      - nEpns
  Tag:
    type: object
    properties:
      tagId:
        type: integer
        format: int64
      tagText:
        type: string
      runs:
        type: array
        items:
          type: string
      logs:
        type: array
        items:
          type: string
    required:
      - tagId
      - tagText
      - runs
      - logs
  FlpRole:
    type: object
    properties:
      run:
        type: integer
        format: int64
      nSubTimeframes:
        type: integer
        format: int64
      equipmentBytes:
        type: integer
        format: int64
      recordingBytes:
        type: integer
        format: int64
      fairMQBytes:
        type: integer
        format: int64
    required:
      - run
      - nSubTimeframes
      - equipmentBytes
      - recordingBytes
      - fairMQBytes
  Run:
    type: object
    properties:
      runNumber:
        type: integer
        format: int64
      O2StartTime:
        type: string
        format: date-time
      TrgStartTime:
        type: string
        format: date-time
      TrgEndTime:
        type: string
        format: date-time
      O2EndTime:
        type: string
        format: date-time
      activityId:
        type: string
      runType:
        type: array
        items:
          type: string
      runQuality:
        type: array
        items:
          type: string
      nDetectors:
        type: integer
        format: int64
      nFlps:
        type: integer
        format: int64
      nEpns:
        type: integer
        format: int64
      nTimeframes:
        type: integer
        format: int64
      nSubtimeframes:
        type: integer
        format: int64
      bytesReadOut:
        type: integer
        format: int64
      bytesTimeframeBuilder:
        type: integer
        format: int64
      tags:
        type: array
        minProperties: 1
        items:
          $ref: '#/definitions/Tag'
      logs:
        type: array
        format: int64
        minProperties: 1
        items:
          type: integer
      flpRoles:
        type: array
        items:
          $ref: '#/definitions/FlpRole'
    required:
      - runNumber
      - O2StartTime
      - TrgStartTime
      - activityId
      - runType
      - nDetectors
      - nFlps
      - nEpns
      - tags
      - logs
      - flpRoles
  LinkLogToRunDto:
    type: object
    properties:
      logId:
        type: integer
        example: 1
        description: The id of the log to link to the run.
        format: int64
    required:
      - logId
  PatchRunDto:
    type: object
    properties:
      TrgEndTime:
        type: string
        example: '2019-05-07T20:35:24.225Z'
        description: Current Date at end of run
        format: date-time
      O2EndTime:
        type: string
        example: '2019-05-07T20:35:24.226Z'
        description: Current Date at end of run
        format: date-time
      runQuality:
        type: string
        example: Good
        description: The quality of the run.
        enum:
          - Good
          - Bad
          - Unknown
    required:
      - TrgEndTime
      - O2EndTime
      - runQuality
  CreateLogDto:
    type: object
    properties:
      subtype:
        type: string
        example: run
        description: What kind of log is it?
        enum:
          - run
          - subsystem
          - announcement
          - intervention
          - comment
      origin:
        type: string
        example: human
        description: Where did the log come from?
        enum:
          - human
          - process
      title:
        type: string
        example: log for run 12
        description: describes the log in short
      body:
        type: string
        example: lorum ipsum
        description: describes the log in depth
      attachments:
        type: array
        example: []
        description: Attachments of this log
        items:
          type: string
      run:
        type: integer
        example: 1
        description: Attached run number of this log
        format: int64
      user:
        type: integer
        example: 1
        description: Author of log
        format: int64
    required:
      - subtype
      - origin
      - title
      - body
      - attachments
      - run
      - user
  Attachment:
    type: object
    properties:
      fileId:
        type: integer
        format: int64
      log:
        type: string
      creationTime:
        type: string
        format: date-time
      title:
        type: string
      fileName:
        type: string
      fileMime:
        type: string
      fileData:
        type: string
    required:
      - fileId
      - log
      - creationTime
      - title
      - fileName
      - fileMime
      - fileData
  Log:
    type: object
    properties:
      logId:
        type: integer
        format: int64
      origin:
        type: string
      creationTime:
        type: string
        format: date-time
      title:
        type: string
      body:
        type: string
      subsystemFkSubsystemId:
        type: integer
        format: int64
      announcementValidUntil:
        type: string
        format: date-time
      commentFkParentLogId:
        type: integer
        format: int64
      commentFkRootLogId:
        type: integer
        format: int64
      tags:
        type: array
        minProperties: 1
        items:
          $ref: '#/definitions/Tag'
      runs:
        type: integer
        format: int64
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
    required:
      - logId
      - origin
      - creationTime
      - title
      - body
      - tags
      - runs
  CreateAttachmentDto:
    type: object
    properties:
      creationTime:
        type: string
        format: date-time
      title:
        type: string
        example: This is a very important file.
        description: What is the name of the file?
      fileName:
        type: string
        example: VeryImportantDocument.txt
        description: Name of the uploaded file.
      fileMime:
        type: string
        example: text/plain
        description: What kind of file is it?
      fileData:
        type: string
        example: VmVyeSBpbXBvcnRhbnQK
        description: The base64 encoded file data.
    required:
      - creationTime
      - fileName
      - fileMime
      - fileData
  LinkRunToLogDto:
    type: object
    properties:
      runNumber:
        type: integer
        example: 1
        description: The id of the run to link to the log.
        format: int64
    required:
      - runNumber
  CreateCommentDto:
    type: object
    properties:
      subtype:
        type: string
        example: comment
        description: What kind of log is it?
        enum:
          - run
          - subsystem
          - announcement
          - intervention
          - comment
      origin:
        type: string
        example: human
        description: Where did the log come from?
        enum:
          - human
          - process
      rootId:
        type: integer
        format: int64
        example: 1
        description: The id of a log
      parentId:
        type: integer
        format: int64
        example: 1
        description: Log id of Parent comment
      title:
        type: string
        example: First Comment on a Log
        description: Title of the comment
      body:
        type: string
        example: Body for the first comment
        description: Content of the comment
      user:
        type: integer
        format: int64
        example: 1
        description: The user's id
      attachments:
        type: array
        example: []
        description: Attachments of this log
        items:
          type: string
    required:
      - subtype
      - origin
      - rootId
      - parentId
      - title
      - body
      - user
      - attachments
  CreateFlpDto:
    type: object
    properties:
      flpName:
        type: string
        example: FLP-TPC-1
        description: Name of the flp
      flpHostname:
        type: string
        example: someserver.cern.ch
        description: 'Name of the hostmachine, where the flp comes from.'
      run:
        type: integer
        example: 1
        description: Attached run numbers of this log
        format: int64
    required:
      - flpName
      - flpHostname
      - run
  PatchFlpDto:
    type: object
    properties:
      nSubTimeframes:
        type: integer
        example: 50
        description: Number of subtimeframes processed in this FLP. Updated regularly.
        format: int64
      equipmentBytes:
        type: integer
        example: 50
        description: data volume out from the readout 'equipment' component in bytes. Can reach PetaBytes.Updated regularly.
        format: int64
      recordingBytes:
        type: integer
        example: 50
        description: data volume out from the readout 'recording' component in bytes.Can reach PetaBytes. Updated regularly.
        format: int64
      fairMQBytes:
        type: integer
        example: 50
        description: data volume out from the readout 'fmq' component in bytes. Can reach PetaBytes. Updated regularly.
        format: int64
    required:
      - nSubTimeframes
      - equipmentBytes
      - recordingBytes
      - fairMQBytes
  CreateTagDto:
    type: object
    properties:
      tagText:
        type: string
        example: '#ALICE'
        description: The text of the tag
    required:
      - tagText
  LinkRunToTagDto:
    type: object
    properties:
      runNumber:
        type: integer
        format: int64
        example: 1
        description: The id of the run to link to the tag.
    required:
      - runNumber
  LinkLogToTagDto:
    type: object
    properties:
      logId:
        type: integer
        format: int64
        example: 1
        description: The id of the log to link to the tag.
    required:
      - logId
  SubSystem:
    type: object
    properties:
      subsystemId:
        type: integer
        format: int64
    required:
      - subsystemId
  CreateSubSystemPermissionDto:
    type: object
    properties:
      user:
        type: integer
        format: int64
      subsystem:
        title: SubSystem
        allOf:
          - $ref: '#/definitions/SubSystem'
          - example: 8
            description: Id of the subsystem.
      isMember:
        type: boolean
        example: true
        description: If the user is a member.
      editEorReason:
        type: boolean
        example: true
        description: Reason for the end of run.
      subSystemHash:
        type: string
        example: 0f62642f-a46c-4c3a-925f-5070d8b0594e
        description: A unique token for a subsystem linked to a user.
      subSystemTokenDescription:
        type: string
        example: Read and Write token for subsystem
        description: A description for the subsystem.
    required:
      - user
      - subsystem
      - isMember
      - editEorReason
      - subSystemHash
      - subSystemTokenDescription
