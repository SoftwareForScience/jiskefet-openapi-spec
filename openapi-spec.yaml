  swagger: '2.0'
  info:
    description: Running with /api prefix
    version: '1.0'
    title: Jiskefet
  basePath: /api
  tags:
    - name: logs
      description: ''
    - name: runs
      description: ''
  schemes:
    - http
  securityDefinitions:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  paths:
    /runs:
      post:
        parameters:
          - name: CreateRunDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/CreateRunDto'
        responses:
          '201':
            description: ''
            schema:
              type: object
        tags:
          - runs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
      get:
        parameters:
          - type: string
            name: orderBy
            required: false
            in: query
            description: On which field to order on.
          - type: string
            name: orderDirection
            required: false
            in: query
            description: 'The order direction, either ascending or descending.'
            enum:
              - ASC
              - DESC
          - type: string
            name: pageSize
            required: false
            in: query
            description: The maximum amount of logs in each result.
            default: '25'
          - type: string
            name: pageNumber
            required: false
            in: query
            description: 'The current page, i.e. the offset in the result set based on pageSize.'
            default: '1'
          - type: string
            name: runNumber
            required: false
            in: query
            description: The id of the log.
          - type: string
            format: date-time
            name: startTimeO2Start
            required: false
            in: query
            description: The lower bound of the timeO2Start filter range.
          - type: string
            format: date-time
            name: endTimeO2Start
            required: false
            in: query
            description: The upper bound of the timeO2Start filter range.
          - type: string
            format: date-time
            name: startTimeTrgStart
            required: false
            in: query
            description: The lower bound of the timeTrgStart filter range.
          - type: string
            format: date-time
            name: endTimeTrgStart
            required: false
            in: query
            description: The upper bound of the timeTrgStart filter range.
          - type: string
            format: date-time
            name: startTimeTrgEnd
            required: false
            in: query
            description: The lower bound of the timeTrgEnd filter range.
          - type: string
            format: date-time
            name: endTimeTrgEnd
            required: false
            in: query
            description: The upper bound of the timeTrgEnd filter range.
          - type: string
            format: date-time
            name: startTimeO2End
            required: false
            in: query
            description: The lower bound of the timeO2End filter range.
          - type: string
            format: date-time
            name: endTimeO2End
            required: false
            in: query
            description: The upper bound of the timeO2End filter range.
          - type: string
            name: activityId
            required: false
            in: query
            description: The id of the activity.
          - type: integer
            name: runType
            required: false
            in: query
            description: The type of the run.
          - type: integer
            name: runQuality
            required: false
            in: query
            description: The quality of the run.
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - runs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/runs/{id}':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - runs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/runs/{id}/logs':
      patch:
        parameters:
          - name: LinkLogToRunDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/LinkLogToRunDto'
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - runs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    /logs:
      post:
        parameters:
          - name: CreateLogDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/CreateLogDto'
        responses:
          '201':
            description: ''
            schema:
              type: object
        tags:
          - logs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
      get:
        parameters:
          - type: string
            name: orderBy
            required: false
            in: query
            description: On which field to order on.
          - type: string
            name: orderDirection
            required: false
            in: query
            description: 'The order direction, either ascending or descending.'
            enum:
              - ASC
              - DESC
          - type: string
            name: pageSize
            required: false
            in: query
            description: The maximum amount of logs in each result.
            default: '25'
          - type: string
            name: pageNumber
            required: false
            in: query
            description: 'The current page, i.e. the offset in the result set based on pageSize.'
            default: '1'
          - type: string
            name: logId
            required: false
            in: query
            description: The id of the log.
          - type: string
            name: searchterm
            required: false
            in: query
            description: Search for a term that exists in the title field of a log.
          - type: string
            name: subtype
            required: false
            in: query
            description: The subtype of the log.
            enum:
              - run
              - subsystem
              - announcement
              - intervention
              - comment
          - type: string
            name: origin
            required: false
            in: query
            description: The origin/creator of the log.
            enum:
              - human
              - process
          - type: string
            name: startCreationTime
            required: false
            in: query
            description: The lower bound of the creation time filter range.
          - type: string
            name: endCreationTime
            required: false
            in: query
            description: The upper bound of the creation time filter range.
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - logs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/logs/{id}':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - logs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/logs/{id}/runs':
      patch:
        parameters:
          - name: LinkRunToLogDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/LinkRunToLogDto'
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - logs
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    /attachments:
      post:
        parameters:
          - name: CreateAttachmentDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/CreateAttachmentDto'
        responses:
          '201':
            description: ''
        tags:
          - attachments
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/attachments/{id}/logs':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - attachments
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    /subsystems:
      get:
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - subsystems
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/subsystems/{id}':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - subsystems
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/users/{id}':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - users
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/users/{id}/tokens':
      get:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - users
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    '/users/{id}/tokens/new':
      post:
        parameters:
          - type: integer
            name: id
            required: true
            in: path
          - name: CreateSubSystemPermissionDto
            required: true
            in: body
            schema:
              $ref: '#/definitions/CreateSubSystemPermissionDto'
        responses:
          '201':
            description: ''
        tags:
          - users
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
    /auth:
      get:
        summary: Authenticate a user by giving an Authorization Grant.
        parameters:
          - type: string
            name: grant
            required: true
            in: query
        responses:
          '200':
            description: User has successfully authenticated and a JWT has been given as a response.
            schema:
              type: object
          '401':
            description: User is unauthorized due to an invalid Authorization Grant.
          '422':
            description: User has not provided an Authorization Grant as a query parameter.
        tags:
          - authentication
        produces:
          - application/json
        consumes:
          - application/json
    /profile:
      get:
        summary: Returns the user's profile
        parameters: []
        responses:
          '200':
            description: User successfully received profile information.
            schema:
              type: object
          '401':
            description: User is unauthorized
        tags:
          - authentication
        produces:
          - application/json
        consumes:
          - application/json
    /overview:
      get:
        parameters:
          - type: string
            name: timeRange
            required: false
            in: query
            description: In which time range the logs of eachsubsystem should be posted
        responses:
          '200':
            description: OK
            schema:
              type: object
        tags:
          - overview
        security:
          - bearer: []
        produces:
          - application/json
        consumes:
          - application/json
  definitions:
    CreateRunDto:
      type: object
      properties:
        timeO2Start:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeTrgStart:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeO2End:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeTrgEnd:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        runType:
          type: string
          example:
            - test
          description: What kind of run.
        runQuality:
          type: string
          example:
            - test
          description: The quality of the run.
        activityId:
          type: string
          example: Sl4e12ofb83no92ns
          description: The id of the activity.
        nDetectors:
          type: integer
          example: 16
          description: Number of detectors during run.
        nFlps:
          type: integer
          example: 7
          description: Number of FLPs that computed data
        nEpns:
          type: integer
          example: 8
          description: Number of EPNs that stored data
        nTimeframes:
          type: integer
          example: 2
          description: Number of timeframes
        nSubtimeframes:
          type: integer
          example: 4
          description: Number of subtimeframes
        bytesReadOut:
          type: integer
          example: 5
          description: Amount of bytes read out
        bytesTimeframeBuilder:
          type: integer
          example: 12
          description: What builder was used.
      required:
        - timeO2Start
        - timeTrgStart
        - timeO2End
        - timeTrgEnd
        - runType
        - runQuality
        - activityId
        - nDetectors
        - nFlps
        - nEpns
        - nTimeframes
        - nSubtimeframes
        - bytesReadOut
        - bytesTimeframeBuilder
    CreateRunResultDto:
      type: object
      properties:
        timeO2Start:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeTrgStart:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeO2End:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        timeTrgEnd:
          type: string
          format: date-time
          example: '2018-11-26T16:43:22.279Z'
        runType:
          type: string
          example:
            - test
          description: What kind of run.
        runQuality:
          type: string
          example:
            - test
          description: The quality of the run.
        activityId:
          type: string
          example: Sl4e12ofb83no92ns
          description: The id of the activity.
        nDetectors:
          type: integer
          example: 16
          description: Number of detectors during run.
        nFlps:
          type: integer
          example: 7
          description: Number of FLPs that computed data
        nEpns:
          type: integer
          example: 8
          description: Number of EPNs that stored data
        nTimeframes:
          type: integer
          example: 2
          description: Number of timeframes
        nSubtimeframes:
          type: integer
          example: 4
          description: Number of subtimeframes
        bytesReadOut:
          type: integer
          example: 5
          description: Amount of bytes read out
        bytesTimeframeBuilder:
          type: integer
          example: 12
          description: What builder was used.
        runNumber:
          type: integer
          example: 34
          description: The run number.
      required:
        - timeO2Start
        - timeTrgStart
        - timeO2End
        - timeTrgEnd
        - runType
        - runQuality
        - activityId
        - nDetectors
        - nFlps
        - nEpns
        - nTimeframes
        - nSubtimeframes
        - bytesReadOut
        - bytesTimeframeBuilder
    LinkLogToRunDto:
      type: object
      properties:
        logId:
          type: integer
          example: '1'
          description: The id of the log to link to the run.
      required:
        - logId
    CreateLogDto:
      type: object
      properties:
        subtype:
          type: string
          example: run
          description: What kind of log is it?
          enum:
            - run
            - subsystem
            - announcement
            - intervention
            - comment
        origin:
          type: string
          example: human
          description: Where did the log come from?
          enum:
            - human
            - process
        title:
          type: string
          example: log for run 12
          description: describes the log in short
        text:
          type: string
          example: lorum ipsum
          description: describes the log in depth
        attachments:
          type: array
          example: []
          description: Attachments of this log
          items:
            type: string
        runs:
          type: array
          example: '8'
          description: Attached run numbers of this log
          items:
            type: string
      required:
        - subtype
        - origin
        - title
        - text
        - attachments
        - runs
    LinkRunToLogDto:
      type: object
      properties:
        runNumber:
          type: integer
          example: '1'
          description: The id of the run to link to the log.
      required:
        - runNumber
    CreateAttachmentDto:
      type: object
      properties:
        title:
          type: string
          example: run
          description: What kind of log is it?
        fileMime:
          type: string
          example: run
          description: What kind of log is it?
        fileData:
          type: string
          example: '23144132412314344'
          description: What kind of log is it?
        logId:
          type: integer
          example: 1
          description: The id of the corresponding Log
      required:
        - title
        - fileMime
        - fileData
        - logId
    User:
      type: integer
    SubSystem:
      type: integer
    CreateSubSystemPermissionDto:
      type: object
      properties:
        user:
          title: User
          allOf:
            - $ref: '#/definitions/User'
            - example: 8
              description: Id of the user.
        subsystem:
          title: SubSystem
          allOf:
            - $ref: '#/definitions/SubSystem'
            - example: 8
              description: Id of the subsystem.
        isMember:
          type: boolean
          example: true
          description: If the user is a member.
        editEorReason:
          type: boolean
          example: true
          description: Reason for the end of run.
        subSystemHash:
          type: string
          example: 0f62642f-a46c-4c3a-925f-5070d8b0594e
          description: A unique token for a subsystem linked to a user.
        subSystemTokenDescription:
          type: string
          example: Read and Write token for subsystem
          description: A description for the subsystem.
      required:
        - user
        - subsystem
        - isMember
        - editEorReason
        - subSystemHash
        - subSystemTokenDescription
